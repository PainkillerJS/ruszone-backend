generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumOrderItemStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}

model User {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  email      String @unique
  password   String
  name       String @unique
  avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")
  phone      String @default("")

  orders Order[]

  reviews Review[]
}

model Product {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  name   String   @unique
  slug   String   @unique
  price  Int
  images String[]

  orderItems OrderItem[]

  reviews Review[]

  catergory   Catergory? @relation(fields: [catergoryId], references: [id])
  catergoryId Int?       @map("catergory_id")
}

model Catergory {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  name String @unique

  products Product[]
}

model Review {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  rating Int
  text   String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")
}

model Order {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  status EnumOrderItemStatus @default(PENDING)

  items OrderItem[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
}

model OrderItem {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @default(now()) @map("update_at")

  quantity Int
  price    Int

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?   @map("order_id")
}
